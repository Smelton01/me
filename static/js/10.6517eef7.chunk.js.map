{"version":3,"sources":["components/Contact/EmailLink.js","pages/Index.js"],"names":["messages","EmailLink","text","useState","idx","updateIter","message","updateMessage","length","char","updateChar","isActive","setIsActive","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newIdx","newChar","slice","className","style","test","color","onMouseEnter","onMouseLeave","Index","Main","description","data-testid","to","href"],"mappings":"mIAUMA,EAAW,CACf,KACA,QACA,OACA,aACA,8BACA,8BACA,mDACA,eACA,6EACA,iBACA,qBACA,2BACA,0CACA,0DACA,UA0DaC,EArCG,WAChB,IA5CoBC,EA2CE,EAIIC,mBAAS,GAJb,mBAIfC,EAJe,KAIVC,EAJU,OAKWF,mBAASH,EAASI,IAL7B,mBAKfE,EALe,KAKNC,EALM,OAMKJ,mBAASH,EAASI,GAAKI,QAN5B,mBAMfC,EANe,KAMTC,EANS,OAOUP,oBAAS,GAPnB,mBAOfQ,EAPe,KAOLC,EAPK,KAyBtB,OA3CkB,SAACC,EAAUC,GAC7B,IAAMC,EAAgBC,mBAEtBC,qBAAU,WACRF,EAAcG,QAAUL,IACvB,CAACA,IAEJI,qBAAU,WACR,GAAIH,EAAO,CACT,IAAMK,EAAKC,aAAY,WACrBL,EAAcG,YACbJ,GACH,OAAO,kBAAMO,cAAcF,IAE7B,OAAO,eACN,CAACL,IAYJQ,EAAY,WACV,IAAIC,EAASnB,EACToB,EAAUf,EACVA,EAXO,IAWQT,EAASI,GAAKI,SAC/Be,GAAU,EACVC,EAAU,GAERD,IAAWvB,EAASQ,OACtBI,GAAY,IAEZL,EAAcP,EAASuB,GAAQE,MAAM,EAAGD,IACxCnB,EAAWkB,GACXb,EAAWc,EAAU,MAEtBb,EArBW,GAqBQ,MAGpB,qBACEe,UAAU,mBACVC,OAvEgBzB,EAuEII,EApEb,mEACDsB,KAAK1B,IAAyB,IAAhBA,EAAKM,OAmEM,GAAK,CAAEqB,MAAO,UAC7CC,aAAc,kBAAMlB,GAAY,IAChCmB,aAAc,kBAAO3B,EAAMJ,EAASQ,QAAWI,GAAY,IAJ7D,SAME,4BAAIN,O,QC7CK0B,UA3BD,kBACZ,cAACC,EAAA,EAAD,CACEC,YAAa,kHADf,SAGE,0BAASR,UAAU,OAAOP,GAAG,QAA7B,UACE,iCACE,sBAAKO,UAAU,QAAf,UACE,oBAAIS,cAAY,UAAhB,SAA0B,cAAC,IAAD,CAAMC,GAAG,IAAT,+BAC1B,uJAMJ,cAAC,EAAD,IACA,uFAAyD,cAAC,IAAD,CAAMA,GAAG,SAAT,sBAAzD,6BAC2B,IACzB,cAAC,IAAD,CAAMA,GAAG,UAAT,oBAFF,KAEqC,IACnC,cAAC,IAAD,CAAMA,GAAG,YAAT,sBAHF,KAGyC,IAHzC,QAIO,cAAC,IAAD,CAAMA,GAAG,SAAT,6BAJP,KAIkD,IAJlD,MAKK,cAAC,IAAD,CAAMA,GAAG,WAAT,qBALL,UAOA,mDAAqB,mBAAGC,KAAK,kCAAR,kBAArB","file":"static/js/10.6517eef7.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'hi',\n  'hello',\n  'hola',\n  'Konnichiwa',\n  'It is very nice to meet you',\n  'welcome to my personal site',\n  'feel free to look around and learn more about me',\n  'but not this',\n  'you.can.also.get.in.touch.if.you.have.any.questions.or.want.to.collaborate',\n  'just-saying-hi',\n  'please-work-for-us',\n  'tommorrow is another day',\n  'tommorow never comes until its too late',\n  'tommorow belongs to the people who prepare for it today',\n  'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = () => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(messages[idx].length); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      setIsActive(false);\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, isActive ? delay : null);\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: 'white' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <p>{message}</p>\n    </div>\n  );\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport EmailLink from '../components/Contact/EmailLink';\n\nimport Main from '../layouts/Main';\n\nconst Index = () => (\n  <Main\n    description={\"Simon M Juba's personal website. Fukuoka, Japan based Information Science Graduate Student at Kyushu University\"}\n  >\n    <article className=\"post\" id=\"index\">\n      <header>\n        <div className=\"title\">\n          <h2 data-testid=\"heading\"><Link to=\"/\">About this site</Link></h2>\n          <p>\n            A beautiful, responsive, statically-generated work in progress.\n            React application written with modern Javascript.\n          </p>\n        </div>\n      </header>\n      <EmailLink />\n      <p> Welcome to my website. Please feel free to read more <Link to=\"/about\">about me</Link>,\n        or you can check out my {' '}\n        <Link to=\"/resume\">resume</Link>, {' '}\n        <Link to=\"/projects\">projects</Link>, {' '}\n        view <Link to=\"/stats\">site statistics</Link>, {' '}\n        or <Link to=\"/contact\">contact</Link> me.\n      </p>\n      <p> Source available <a href=\"https://github.com/smelton01/me\">here</a>.</p>\n    </article>\n  </Main>\n);\n\nexport default Index;\n"],"sourceRoot":""}